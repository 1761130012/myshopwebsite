<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.OrderDao">

    <sql id="allFiledSql">
        order_id,user_id,shop_id,start_time,end_time,money,remark,pay_state,state,is_delete
    </sql>


    <sql id="tableName">
        order_goods
    </sql>


    <resultMap id="joinType" type="com.example.vo.OrderVo">
        <id property="orderId" column="order_id"/>
        <association property="userVo" column="user_id"
                     select="com.example.dao.UserDao.selectById"/>
    </resultMap>

    <select id="selectPageVo" resultMap="joinType">
        SELECT * FROM order_goods o INNER JOIN `user` u ON o.user_id = u.user_id
        <where>
            <if test="orderVo!=null">
                <if test="orderVo.userName!=null">and u.name like concat ('%',#{orderVo.userName},'%')</if>
                <if test="orderVo.state!=null and orderVo.state >=0 ">and o.state = #{orderVo.state}</if>
            </if>
        </where>
    </select>


    <!-- void updateCountMoneyById(@Param("orderId") String orderId, @Param("countMoney") Float countMoney); -->
    <update id="updateCountMoneyById">
        update order_goods set money=#{countMoney} where order_id=#{orderId}
    </update>
    <update id="updateShopIdByOrderId">
        update order_goods  set shop_id=#{shopId} where order_id=#{orderId}
    </update>
    <select id="selectPayStateByOrderId" resultType="com.example.vo.OrderVo">
        select pay_state,state from order_goods
        where order_id = #{orderId,jdbcType=VARCHAR}
    </select>

    <!-- List<OrderVo> selectTimeCountMoneyByTime(@Param("shopId") Integer shopId,
                                             @Param("orderVo") OrderVo orderVo);
                                            0.05 æ˜¯
                                             -->
    <select id="selectTimeCountMoneyByTime" resultType="com.example.vo.OrderVo">
        select end_time,money from
        <include refid="tableName"/>
        <where>
            <choose>
                <when test="startTime !=null and endTime !=null ">
                    and end_time >= #{startTime} and #{endTime} >=
                    end_time
                </when>
                <when test="startTime != null ">
                    and end_time = #{startTime}
                </when>
                <when test="endTime != null ">
                    and end_time = #{endTime}
                </when>
            </choose>
        </where>
        order by end_time asc
    </select>


    <!-- @Param("startTime") Date startTime, @Param("endTime") Date endTime -->
    <select id="selectOrderIdByTime" resultType="java.lang.String">
        select order_id from
        <include refid="tableName"/>
        <where>
            <choose>
                <when test="startTime != null and endTime != null ">
                    and end_time >= #{startTime}
                    and #{endTime} >= end_time
                </when>
                <otherwise>
                    and end_time is not NULL
                </otherwise>
            </choose>
        </where>
    </select>

    <!-- List<String> selectOrderTimeCountNumByTime(@Param("startTime") Date startTime, @Param("endTime") Date endTime); -->
    <select id="selectOrderTimeCountNumByTime" resultType="java.util.Map">
        select end_time endTime,money from
        <include refid="tableName"/>
        <where>
            <choose>
                <when test="startTime != null and endTime != null ">
                    and end_time >= #{startTime,javaType=DATE}
                    and #{endTime,javaType=DATE} >= end_time
                </when>
            </choose>
        </where>
    </select>

    <resultMap id="selectAllOrderByShopIdStateMap" type="com.example.vo.OrderVo">
        <id property="orderId" column="order_id"/>
        <association property="userVo" column="user_id"
                     select="com.example.dao.UserDao.selectById"/>
    </resultMap>

    <!-- Page<OrderVo> selectAllOrderByShopIdState(Page<OrderVo> page, OrderVo orderVo); -->
    <select id="selectAllOrderByShopIdState" resultMap="selectAllOrderByShopIdStateMap">
        select order_id,user_id,money,remark,state from
        <include refid="tableName"/>
        <where>
            <if test="orderVo.state !=null and orderVo.state!=-1">
                and state=#{orderVo.state}
            </if>
            <if test="orderVo.orderId !=null and orderVo.orderId !='' ">
                and order_id like concat(#{orderVo.orderId},'%')
            </if>
            and shop_id=#{orderVo.shopId}
        </where>
    </select>

    <!-- Float selectCountMoneyByOrderId(@Param("orderId") String orderId); -->
    <select id="selectCountMoneyByOrderId" resultType="java.lang.Float">
        select money from
        <include refid="tableName"/>
        where order_id =#{orderId}
    </select>
</mapper>
